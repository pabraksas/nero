{
  "main": {
    "id": "b82b9245cfd0b722",
    "type": "split",
    "children": [
      {
        "id": "1c1a7fa4a676fc7f",
        "type": "tabs",
        "children": [
          {
            "id": "33ca47e648a6193a",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "knowledge/GPT-регистрация.md",
                "mode": "preview",
                "source": false
              }
            }
          },
          {
            "id": "8fffb77e9c1e2b71",
            "type": "leaf",
            "state": {
              "type": "modules:documentation",
              "state": {
                "modules:documentation": {
                  "data": "# Modules for Obsidian [![release](https://img.shields.io/github/v/release/polyipseity/obsidian-modules)][latest release] [![Obsidian downloads](https://img.shields.io/badge/dynamic/json?logo=Obsidian&color=%238b6cef&label=downloads&query=$[\"modules\"].downloads&url=https://raw.githubusercontent.com/obsidianmd/obsidian-releases/master/community-plugin-stats.json)][community plugin]\n\n[Buy Me a Coffee]: https://buymeacoffee.com/polyipseity\n[Buy Me a Coffee/embed]: https://img.buymeacoffee.com/button-api/?text=Buy%20me%20a%20coffee&emoji=&slug=polyipseity&button_colour=40DCA5&font_colour=ffffff&font_family=Lato&outline_colour=000000&coffee_colour=FFDD00\n[Obsidian]: https://obsidian.md/\n[changelog]: https://github.com/polyipseity/obsidian-modules/blob/main/CHANGELOG.md\n[community plugin]: https://obsidian.md/plugins?id=modules\n[latest release]: https://github.com/polyipseity/obsidian-modules/releases/latest\n[other things]: https://github.com/polyipseity/obsidian-monorepo\n[plugin library]: https://github.com/polyipseity/obsidian-plugin-library\n[repository]: https://github.com/polyipseity/obsidian-modules\n[trailer]: https://raw.githubusercontent.com/polyipseity/obsidian-modules/main/assets/trailer.png\n\nLoad JavaScript and related languages like TypeScript modules from the vault and the Internet.\n\n[![Buy Me a Coffee/embed]][Buy Me a Coffee]\n\n__[Repository] · [Changelog] · [Community plugin] · [Other things] · [Features](#features) · [Installation](#installation) · [Usage](#usage) · [Contributing](#contributing) · [Security](#security)__\n\n![Trailer]\n\nFor first time users, read the [installation](#installation) section first!\n\nThis file is automatically opened on first install. You can reopen it in settings or command palette.\n\n## Features\n\n- Load JavaScript and TypeScript modules from the vault and the Internet on all platforms.\n- Load modules at startup.\n- No configuration needed.\n- Resolves relative paths, vault paths, Markdown links, wikilinks, and external links.\n- Loads Markdown files as code.\n- Supports using other modules inside modules.\n- Loads CommonJS (`module.exports`) and ES modules (`export`).\n- Supports circular dependencies for CommonJS modules.\n- Configurable require name.\n- Adds source maps for debugging.\n- Supports popular plugins like Dataview and Templater.\n\n## Installation\n\n1. Install plugin.\n\t- Community plugins\n\t\t1. Install the [plugin][community plugin] from community plugins directly.\n\t- Manual\n\t\t1. Create directory `modules` under `.obsidian/plugins` of your vault.\n\t\t2. Place `manifest.json`, `main.js`, and `styles.css` from the [latest release] into the directory.\n\t- Building (latest)\n\t\t1. Clone this repository, including its submodules.\n\t\t2. Install [npm](https://docs.npmjs.com/downloading-and-installing-node-js-and-npm).\n\t\t3. Run `npm install` in the root directory.\n\t\t4. Run `npm run obsidian:install <vault directory>` in the root directory.\n\t- [Obsidian42 - BRAT](https://obsidian.md/plugins?id=obsidian42-brat) (latest)\n\t\t- See [their readme](https://github.com/TfTHacker/obsidian42-brat#readme).\n2. Enable plugin.\n3. (optional) Configure plugin settings.\n\n## Usage\n\n- Enable the plugin.\n- To import a module:\n```JavaScript\n// Using `require.import` is recommended.\nawait self.require.import(\"obsidian\") // builtin modules such as the Obsidian API\nawait self.require.import(\"vault/path/to/a module.md\") // vault path\n// The following three require context and may not be able to infer the current directory. Please file an issue if so.\nawait self.require.import(\"../relative/path/to/a module.js\") // relative path\nawait self.require.import(\"[omitted or whatever](markdown/link/to/a%20module.js.md)\") // Markdown link\nawait self.require.import(\"[[wikilink/to/a module|ommited or whatever]]\") // wikilink\n// The following one requires enabling external links in settings.\nawait self.require.import(\"https://esm.sh/scratchblocks\") // external link\n// You can workaround the inability to infer the current directory.\nawait self.require.import(\"../relative/path/to/a module.js\", { cwd: context.currentDirectory })\n\n// If `await` is not supported, use `require` instead. It has less support for loading modules, however.\nself.require(\"obsidian\")\nself.require(\"vault/path/to/a module.md\")\n// The following three require context and may not be able to infer the current directory. Please file an issue if so.\nself.require(\"../relative/path/to/a module.js\")\n// The following three may not work in startup scripts.\nself.require(\"[ommited or whatever](markdown/link/to/a%20module.js.md)\")\nself.require(\"[[wikilink/to/a module|omitted or whatever]]\")\n// The following one requires enabling external links and adding the link to preloaded external links in settings.\nself.require(\"https://esm.sh/scratchblocks\") // external link\n// You can workaround the inability to infer the current directory.\nself.require(\"../relative/path/to/a module.js\", { cwd: context.currentDirectory })\n```\n- To use entities in a module:\n```JavaScript\nconst { eat, pi } = await self.require.import(\"[[module]]\")\neat(2 * pi)\n// OR\nconst mod = await self.require.import(\"[[module]]\")\nmod.eat(2 * mod.pi)\n```\n- To create a module, create a JavaScript or related language file or a Markdown file with JavaScript or related language code blocks.\n\t- For `require` (but not `require.import`), the module file needs to be preloaded, which can be configured in settings. By default, preloaded files have the following extensions: `.js`, `.js.md`, `.mjs`, `.mjs.md`, `.ts.md`, `.mts.md`, `.ts`, `.ts.md`\n\t- Modules should not have global or side effects because they are cached and thus not reloaded on every requiring.\n\t- For Markdown files, code block languages that are loaded can be configured in settings.\n\t- For non-JavaScript languages, ensure the module file has the correct file extension (also applies to `.xxx.md`) or prepend the following metadata:\n```TypeScript\n// { \"language\": \"TypeScript\" }\n\nexport const variable: string = \"string\"\n```\n````Markdown\n---\nmodule:\n  language: TypeScript\n---\n\n```TypeScript\nexport const variable: string = \"string\"\n```\n````\n- Module exports can be CommonJS-style or ES module-style:\n```JavaScript\n// ES module-style, supported by `require.import`.\nexport function fun() {}\nexport const variable = \"string\"\nexport default 42 // The default export has the name `default`.\n\n// CommonJS-style, supported by both `require` and `require.import`.\nmodule.exports.fun = function() {}\nmodule.exports.variable = \"string\"\nmodule.exports.default = 42\nexports.abbreviatedForm = {}\n```\n- To create a startup module, export a function (supports async) to run at startup using `export default` or assigning to `module.exports` and add the module to plugin settings:\n```JavaScript\n// ES module-style\nexport default function() {\n\tconsole.log(\"Hello world!\")\n}\n\n// CommonJS-style\nmodule.exports = function() {\n\tconsole.log(\"Hello world!\")\n}\n```\n- The full API is available from [`sources/@types/obsidian-modules.ts`](sources/%40types/obsidian-modules.ts).\n\n## Contributing\n\nContributions are welcome!\n\n### Todos\n\nThe todos here, ordered alphabetically, are things planned for the plugin. There are no guarantees that they will be completed. However, we are likely to accept contributions for them.\n\n- User-defined module aliases.\n- Add bare module transformation support for more CDNs such as <https://cdn.jsdelivr.net>.\n- Faster import analysis and transformation.\n- Autocomplete with JSDoc.\n\n### Translating\n\nTranslation files are under [`assets/locales/`](assets/locales/). Each locale has its own directory named with its corresponding __[IETF language tag](https://wikipedia.org/wiki/IETF_language_tag)__. Some translation keys are missing here and instead located at [`obsidian-plugin-library`][plugin library].\n\nTo contribute translation for an existing locale, modify the files in the corresponding directory.\n\nFor a new locale, create a new directory named with its language tag and copy [`assets/locales/en/translation.json`](assets/locales/en/translation.json) into it. Then, add an entry to [`assets/locales/en/language.json`](assets/locales/en/language.json) in this format:\n```JSONc\n{\n\t// ...\n\t\"en\": \"English\",\n\t\"(your-language-tag)\": \"(Native name of your language)\",\n\t\"uwu\": \"Uwuish\",\n\t// ...\n}\n```\nSort the list of languages by the alphabetical order of their language tags. Then modify the files in the new directory. There will be errors in [`assets/locales.ts`](assets/locales.ts), which you can ignore and we will fix them for you. You are welcome to fix them yourself if you know TypeScript.\n\nWhen translating, keep in mind the following things:\n- Do not translate anything between `{{` and `}}` (`{{example}}`). They are __interpolations__ and will be replaced by localized strings at runtime.\n- Do not translate anything between `$t(` and `)` (`$t(example)`). They refer to other localized strings. To find the localized string being referred to, follow the path of the key, which is separated by dots (`.`). For example, the key [`youtu.be./dQw4w9WgXcQ`](https://youtu.be./dQw4w9WgXcQ) refers to:\n```JSONc\n{\n\t// ...\n\t\"youtu\": {\n\t\t// ...\n\t\t\"be\": {\n\t\t\t// ...\n\t\t\t\"/dQw4w9WgXcQ\": \"I am 'youtu.be./dQw4w9WgXcQ'!\",\n\t\t\t// ...\n\t\t},\n\t\t// ...\n\t},\n\t// ...\n}\n```\n- The keys under `generic` are vocabularies. They can be referred in translation strings by `$t(generic.key)`. Refer to them as much as possible to standardize translations for vocabularies that appear in different places.\n- It is okay to move interpolations and references to other localized strings around to make the translation natural. It is also okay to not use some references used in the original translation. However, it is NOT okay to not use all interpolations.\n\n## Security\n\nWe hope that there will never be any security vulnerabilities, but unfortunately it does happen. Please [report](#reporting-a-vulnerability) them!\n\n### Supported versions\n\n| Version | Supported |\n|-|-|\n| latest | ✅ |\n| outdated | ❌ |\n\n### Reporting a vulnerability\n\nPlease report a vulerability by opening an new issue. We will get back to you as soon as possible.\n",
                  "displayTextI18nKey": "translation:generic.documentations.readme",
                  "iconI18nKey": "asset:generic.documentations.readme-icon"
                }
              }
            }
          },
          {
            "id": "f35769419253332a",
            "type": "leaf",
            "state": {
              "type": "modules:documentation",
              "state": {
                "modules:documentation": {
                  "data": "# obsidian-modules\n\n## 2.4.0\n\n### Minor Changes\n\n- 45f7560: Add startup modules.\n- 24dfc8d: Add `Require#onInvalidate`.\n\n### Patch Changes\n\n- de069e6: Provide `app` to avoid using the deprecated global `app`. For users, nothing needs to be changed.\n- dbef51c: Fix importing from external links not working with custom require name.\n\n## 2.3.0\n\nNo more console spamming and unchecked `data.json` growth!\n\n### Minor Changes\n\n- d724fef: Move settings `recovery` and `lastReadChangelogVersion` to `localStorage`. (6d612c570926387ee6b5991475cb993517a39d45)\n- 307489d: Replace some `Record`s with `Map`s. (https://2ality.com/2012/01/objects-as-maps.html)\n\n### Patch Changes\n\n- b496460: Remove debug statements. Addresses [GH#5](https://github.com/polyipseity/obsidian-modules/issues/5). (+f9fc1874e2c0b0b6c486ae6a13e52bf09cef588d)\n\n## 2.2.0\n\n### Minor Changes\n\n- 3b251be: Add cwd detection for `dv.view` in Dataview.\n- ef032bf: Add cwd detection for Templater user scripts.\n- fdbee2f: Add cwd detection for canvases.\n- 2fd4dc4: Change the type and meaning of `null` and `undefined` for working directory. This allows overriding the working directory with no working directory in `CommonOptions`.\n- 5fbad90: Always change the cwd context in preview and editor.\n\n### Patch Changes\n\n- 92b9215: Fix context detection for Templater templates.\n- 004ed2e: Fix weird behaviors if the vault has more than 1000 files. Fixes [GH#4](https://github.com/polyipseity/obsidian-modules/issues/4).\n\n## 2.1.0\n\n### Minor Changes\n\n- 9a7c8b6: Add command \"Clear cache\".\n- 58abf99: Make the public `invalidate` invalidate more things.\n\n### Patch Changes\n\n- fdbca01: Reduce memory usage by up to 75% for preloaded files.\n- 663d9eb: Fix canvas rendering nothing. Fixes [GH#2](https://github.com/polyipseity/obsidian-modules/issues/2).\n\n## 2.0.0\n\n### Major Changes\n\n- 0c567c9: Add TypeScript support.\n\n### Minor Changes\n\n- 97eca08: Add setting \"Require name\".\n- 24ed484: Move more work to workers and improve code.\n- 459125e: Add setting \"Markdown code block languages to load\".\n- a0bea02: Add support for importing external modules via HTTP and HTTPS.\n- 4d79665: Add setting \"Preloading rules\".\n- ccfbf35: Add setting \"Preloaded external links\".\n- f36db52: Use workers to transpile TypeScript if async import is used.\n- 26155df: Add setting \"Expose internal modules\". Cherry-picked from `d22f7bf6182272e3e0058c328ed42ec3039de184`, which is from `obsidian-terminal`.\n- fd1f08c: Add setting `Expose internal modules`.\n- 47c5f65: Allow importing a loading module multiple times. (Deadlocks may result though.)\n- 9b43345: Implement source mapping. Sources are placed under `modules/`.\n- c944a54: Rewrite dependency handling.\n- a85b3b7: Add setting \"Enable external links\".\n- fbcf7d2: Add relative path support for Templater.\n- 0d9ed0f: Make importing from external CDNs work.\n- d0adec9: Add setting \"`import` timeout\".\n\n### Patch Changes\n\n- b5f2d98: Assign `Symbol.toStringTag` to modules.\n- 24cbb1c: Respect existing source maps when source mapping.\n- a286c55: Define `process` so that React can load on mobile.\n- c3a689e: Limit the number of concurrent requests to 6.\n- fa98881: Compress the worker to reduce bundle size.\n- 108639c: Fix plugin potentially failing to load. This may happen if `Community plugins > Debug startup time` is disabled. When it is disabled, Obsidian removes source maps, which erraneously removes JavaScript strings intentionally containinig source map-like content.\n- e06bcf1: Add async `Transpile.atranspile`.\n- b12e8ec: Move parsing to workers.\n- 74c7da3: Prefix source map location with plugin ID.\n\n## 1.1.0\n\n### Minor Changes\n\n- 8e538e7: Add `cwd` option to `require` and `require.import` to manually provide context.\n\n### Patch Changes\n\n- b3791a4: Create `AbstractFileResolve#aresolvePath` so that `metadataCache` is awaited for in async resolve.\n\n## 1.0.2\n\n### Patch Changes\n\n- 48ee70f: Make the `require` patch more compatible with other `require` patches.\n\n## 1.0.1\n\n### Patch Changes\n\n- ab7c316: Fix `require` not working at all.\n- 3f0f57b: Fix dependency tracking, especially circular ones.\n\n## 1.0.0\n\n### Major Changes\n\n- 879a4d6: Implement basic functionalities: vault path resolving, caching, module loading, `require` patching, and an API.\n\n### Minor Changes\n\n- 5fbc6b5: Implement resolving relative paths.\n- ce395a7: Add `Resolve#aresolve` to support resolving files on-demand, making `require.import` support loading any files.\n- c9d0d61: Implement dependency tracking so that modules are transitively reloaded.\n- b37eb32: Implement resolving Markdown links and wikilinks.\n- 7120162: Implement Markdown-to-JavaScript transpiler.\n\n### Patch Changes\n\n- 42f93f2: Remove arbitrary restrictions for resolving vault paths and relative paths.\n- ed74c49: Write usage guide.\n",
                  "displayTextI18nKey": "translation:generic.documentations.changelog",
                  "iconI18nKey": "asset:generic.documentations.changelog-icon"
                }
              }
            }
          }
        ]
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "7c90aae3cb4daa94",
    "type": "split",
    "children": [
      {
        "id": "47c97ddcb8ae3402",
        "type": "tabs",
        "children": [
          {
            "id": "e1accf4554d99122",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "5b05c4eb4b8d58ff",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "",
                "matchingCase": false,
                "explainSearch": false,
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "de974e97f85d5765",
            "type": "leaf",
            "state": {
              "type": "bookmarks",
              "state": {}
            }
          },
          {
            "id": "754d4ab7ac49ce67",
            "type": "leaf",
            "state": {
              "type": "VIEW_TYPE_LONGFORM_EXPLORER",
              "state": {}
            }
          },
          {
            "id": "38b738ecdab7bf7d",
            "type": "leaf",
            "state": {
              "type": "runjs-codelist-view",
              "state": {}
            }
          }
        ],
        "currentTab": 4
      }
    ],
    "direction": "horizontal",
    "width": 300
  },
  "right": {
    "id": "b9c002800ece28cc",
    "type": "split",
    "children": [
      {
        "id": "d3bc3dbe818da6a3",
        "type": "tabs",
        "children": [
          {
            "id": "f6da4de6810e551d",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "knowledge/GPT-регистрация.md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "84952e1d50200ff5",
            "type": "leaf",
            "state": {
              "type": "outgoing-link",
              "state": {
                "file": "knowledge/GPT-регистрация.md",
                "linksCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "4ccba87dbaf502ac",
            "type": "leaf",
            "state": {
              "type": "tag",
              "state": {
                "sortOrder": "frequency",
                "useHierarchy": true
              }
            }
          },
          {
            "id": "adf4a465dbd615f1",
            "type": "leaf",
            "state": {
              "type": "outline",
              "state": {
                "file": "knowledge/GPT-регистрация.md"
              }
            }
          },
          {
            "id": "be3053ce8786e1ab",
            "type": "leaf",
            "state": {
              "type": "all-properties",
              "state": {
                "sortOrder": "frequency"
              }
            }
          },
          {
            "id": "a194c909b958f7fa",
            "type": "leaf",
            "state": {
              "type": "calendar",
              "state": {}
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 300,
    "collapsed": true
  },
  "left-ribbon": {
    "hiddenItems": {
      "switcher:Меню быстрого перехода": false,
      "graph:Граф": false,
      "canvas:Создать новый холст": false,
      "templates:Вставить шаблон": false,
      "command-palette:Открыть палитру команд": false,
      "markdown-importer:Импорт Markdown-файлов": false,
      "flowershow:Publish with Flowershow": false,
      "obsidian-local-images-plus:Local Images Plus  0.15.8\r\nLocalize attachments (plugin folder)": false,
      "runjs:RunJS": false,
      "templater-obsidian:Templater": false
    }
  },
  "active": "38b738ecdab7bf7d",
  "lastOpenFiles": [
    "config.mjs~",
    "knowledge/images.md",
    "knowledge/20 AI for anything.md",
    "index.md",
    "--media/--templates/Rename File.md",
    "--media/--templates/Clipboard/Clipboard Figcaption.md",
    "--media/--templates/Clipboard/Clipboard Figure.md",
    "--media/--templates/Clipboard/Clipboard Image.md",
    "--media/--templates/Clipboard/Clipboard Internal Image.md",
    "--media/--templates/Clipboard/Clipboard Local Audio.md",
    "--media/--templates/Clipboard/Clipboard Local Video.md"
  ]
}